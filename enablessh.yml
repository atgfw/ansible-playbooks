- name: Add port 22 rule only to firewalls missing it
  hosts: localhost
  gather_facts: false
  collections:
    - community.digitalocean

  vars:
    do_token: "{{ lookup('env', 'DO_API_TOKEN') }}"
    ssh_rule:
      protocol: tcp
      port_range: "22"
      source_addresses:
        - '161.35.133.150/32'
        - '208.103.13.38/30'
        - '173.165.98.241/29'
        - '138.197.62.57/32'

  tasks:

    - name: Get all DigitalOcean firewalls
      community.digitalocean.digital_ocean_firewall_info:
        oauth_token: "{{ do_token }}"
      register: firewalls_info

    - name: Identify firewalls missing port 22 rule
      vars:
        firewalls_missing_ssh: []
      set_fact:
        firewalls_missing_ssh: "{{ firewalls_missing_ssh + [item] }}"
      loop: "{{ firewalls_info.data }}"
      when: >
        not item.inbound_rules | selectattr('ports', 'defined') |
        selectattr('protocol', 'equalto', 'tcp') |
        selectattr('ports', 'search', '(^22$|^22-[0-9]+$|^[0-9]+-22$|^[0-9]+-[0-9]+$)') |
        list | length > 0 is not true
      loop_control:
        label: "{{ item.name }}"

    - name: Add SSH rule to selected firewalls
      community.digitalocean.digital_ocean_firewall:
        oauth_token: "{{ do_token }}"
        state: present
        name: "{{ item.name }}"
        inbound_rules: >-
          {{
            item.inbound_rules | map('extract', ['protocol', 'ports', 'sources']) | map('combine', {
              'port_range': item.ports,
              'source_addresses': item.sources.addresses
            }) | list + [ssh_rule]
          }}
          outbound_rules: >-
          {{
            item.outbound_rules | map('extract', ['protocol', 'ports', 'destinations']) | map('combine', {
              'port_range': item.ports,
              'destination_addresses': item.destinations.addresses
            }) | list
          }}
        droplet_ids: "{{ item.droplet_ids }}"
      loop: "{{ firewalls_missing_ssh }}"
      loop_control:
        label: "{{ item.name }}"
