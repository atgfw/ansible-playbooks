---
# Playbook: sync_connectwise_minimal.yml
# Purpose: Create or update a ConnectWise Manage "Configuration" record
#          for each host with minimal fields.

- name: Sync host facts to ConnectWise Manage configuration
  hosts: all
  gather_facts: yes

  vars:
    cw_base_url: "https://api-na.myconnectwise.net/v4_6_release/apis/3.0"

    # Authentication via environment variables (required)
    cw_company_id:  "{{ lookup('env','CW_COMPANY_ID') }}"
    cw_public_key:  "{{ lookup('env','CW_PUBLIC_KEY') }}"
    cw_private_key: "{{ lookup('env','CW_PRIVATE_KEY') }}"
    cw_client_id:   "{{ lookup('env','CW_CLIENT_ID') }}"

    # Configuration parameters (both name and id required)
    cw_config_type_id:   146        # Numeric ID of CW Configuration Type
    cw_config_type_name: "Droplet"  # Name of the CW Configuration Type
    cw_status_id:        2           # Numeric ID for the desired status

  tasks:

    - name: Validate ConnectWise credentials
      fail:
        msg: "One or more ConnectWise credentials are missing."
      when: cw_company_id == '' or cw_public_key == '' or cw_private_key == '' or cw_client_id == ''

    - name: Extract Company identifier from Droplet tags
      set_fact:
        cw_company_ident: >-
          {{ (do_tags | default([]) | select('match', '^company:') |
              map('regex_replace', '^company:', '') | list | first | default('')) }}

    - name: Fail if no company tag present
      fail:
        msg: "Droplet lacks a 'company:<IDENT>' tag."
      when: cw_company_ident == ''

    - name: Compute common facts
      set_fact:
        cw_device_uuid: "{{ do_id | default(ansible_product_uuid | default(inventory_hostname)) }}"
        cw_auth_header: "Basic {{ (cw_company_id ~ '+' ~ cw_public_key ~ ':' ~ cw_private_key) | b64encode }}"

    - name: Lookup ConnectWise Company by identifier
      uri:
        url: "{{ cw_base_url }}/company/companies?conditions=identifier='{{ cw_company_ident }}'"
        method: GET
        headers:
          Authorization: "{{ cw_auth_header }}"
          clientId: "{{ cw_client_id }}"
          Accept: "application/json"
        return_content: yes
        validate_certs: yes
      register: cw_company_lookup

    - name: Fail if Company identifier not found
      fail:
        msg: "Company identifier '{{ cw_company_ident }}' not found in ConnectWise."
      when: cw_company_lookup.json | length == 0

    - name: Set ConnectWise Company numeric ID
      set_fact:
        cw_company_id_num: "{{ cw_company_lookup.json[0].id }}"

    - name: Build configuration payload
      set_fact:
        cw_payload:
          name: "{{ inventory_hostname }}"
          deviceIdentifier: "{{ cw_device_uuid }}"
          type:
            id:   "{{ cw_config_type_id }}"
            name: "{{ cw_config_type_name }}"
          status:
            id: "{{ cw_status_id }}"
            name: "{{ cw_status_name }}"
