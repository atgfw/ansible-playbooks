---
- hosts: passportalbackup

  vars:
    wine_prefix: "/home/sysadmin/.wine"
    wine_bin: "/usr/bin/wine"
    passportal_exe: "/home/sysadmin/.wine/drive_c/Program Files/N-able/Passportal Backup Utility/PassportalBackupUtility.exe"
    passportal_extract_path: "/home/sysadmin/.wine/drive_c/Program Files/N-able/Passportal Backup Utility/PasswordBackup.csv.zip"
    download_root: "/srv/secure-downloads"
    download_name: "passportal_backup.zip"
  tasks:
    - name: Create Basic Auth file
      community.general.htpasswd:
        path: /etc/nginx/.htpasswd
        name: "{{ auth_user }}"
        password: "{{ auth_pass }}"
        crypt_scheme: bcrypt
      no_log: true

    - name: Check Passportal EXE exists on host
      ansible.builtin.stat:
        path: "{{ passportal_exe }}"
      register: passportal_exe_stat
      changed_when: false
  
    - name: Fail if EXE missing
      ansible.builtin.fail:
        msg: "Passportal EXE not found at {{ passportal_exe }}"
      when: not passportal_exe_stat.stat.exists
      
    - name: Run Passportal Backup Utility via Wine
      become: true
      become_user: sysadmin
      ansible.builtin.command:
        argv:
        - /usr/bin/xvfb-run
        - -a
        - -s
        - "-screen 0 1280x800x24 -ac"
        - "{{ wine_bin | default('/usr/bin/wine') }}"
        - "{{ passportal_exe }}"
        - "ACCESSKEY={{ passportal_access_key }}"
        - "ORGKEY={{ passportal_org_key }}"
        - 'EXTRACTFILEPATH="./"'
        - "ZIPFILEPASSWORD={{ passportal_zip_password }}"
        chdir: "{{ passportal_exe | dirname }}"
      environment:
        WINEPREFIX: "{{ wine_prefix | default(lookup('env', 'HOME') + '/.wine') }}"
      no_log: true
      
      
      
    - name: Check backup file exists
      ansible.builtin.stat:
        path: "{{ passportal_extract_path }}"
        follow: true
        get_checksum: false
        get_mime: false
        get_attributes: false
      register: passwords
      changed_when: false
      failed_when: not passwords.stat.exists
      
    - name: Create Basic Auth file
      community.general.htpasswd:
        path: /etc/nginx/.htpasswd
        name: "{{ auth_user }}"
        password: "{{ auth_pass }}"
        crypt_scheme: bcrypt
      no_log: true
      
    - name: Move the ZIP into the served directory
      ansible.builtin.command: "mv {{ passportal_extract_path }} {{ download_root }}/{{ download_name }}"
      
    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: "{{ download_root }}/{{ download_name }}"
        owner: www-data
        group: www-data
        mode: "0750"
        state: file
        modification_time: now
        access_time: now


      
